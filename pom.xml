<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.rj.postgresdocker</groupId>
	<artifactId>PostgresqlWithDocker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>PostgresqlWithDocker</name>
	<description>Delivery project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- SPRING BOOT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- PERSISTENCE JOOQ -->
		<dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.11.0</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>3.11.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>3.11.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta-extensions</artifactId>
            <version>3.11.0</version>
        </dependency>

		<!-- DATABASE -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>properties-maven-plugin</artifactId>
			    <version>1.0.0</version>
			    <executions>
			        <execution>
			            <phase>initialize</phase>
			            <goals>
			                <goal>read-project-properties</goal>
			            </goals>
			            <configuration>
			                <files>
			                    <file>src/main/resources/application.properties</file>
			                </files>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
			<plugin>
			    <groupId>org.jooq</groupId>
			    <artifactId>jooq-codegen-maven</artifactId>
			    <version>3.11.0</version>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <goals>
			                <goal>generate</goal>
			            </goals>
			            <configuration>
			                <jdbc>
			                    <driver>org.postgresql.Driver</driver> 
			                    <url>jdbc:postgresql://0.0.0.0:5432/delivery</url> 
			                    <user>delivery</user>
			                    <password>delivery</password>
			                </jdbc>
			                <generator>
						        <database>
						            <!-- The database type. The format here is:
						                 org.util.[database].[database]Database -->
						            <name>org.jooq.meta.postgres.PostgresDatabase</name>
						
						            <!-- The database schema (or in the absence of schema support, in your RDBMS this
						                 can be the owner, user, database name) to be generated -->
						            <inputSchema>delivery</inputSchema>
						
						            <!-- All elements that are generated from your schema
						                 (A Java regular expression. Use the pipe to separate several expressions)
						                 Watch out for case-sensitivity. Depending on your database, this might be important! -->
						            <includes>.*</includes>
						
						            <!-- All elements that are excluded from your schema
						                 (A Java regular expression. Use the pipe to separate several expressions).
						                 Excludes match before includes, i.e. excludes have a higher priority -->
						            <excludes></excludes>
        						</database>
			                    <target>
			                        <packageName>com.br.sp.postgresdocker.model.jooq</packageName>
			                        <directory>/src/main/java</directory>
			                    </target>
			                </generator>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			
		</plugins>
	</build>


</project>
